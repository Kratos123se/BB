#5a_Part of speech Tagging and chunking of user definedtext.
import nltk
from nltk import pos_tag
from nltk import RegexpParser
nltk.download('averaged_perceptron_tagger')
text ="NLP is very interesting subject".split()
print("After Split:",text)
tokens_tag = pos_tag(text)
print("tagged Tokens:",tokens_tag)
patterns= """Adj_senti :{<RB><JJ>} """
chunker = RegexpParser(patterns)
print("constructed a chunker:",chunker)
output = chunker.parse(tokens_tag)
print("After Chunking",output)

#5b_Named Entity recognition of user defined text.
!python -m nltk.downloader averaged_perceptron_tagger
import nltk
nltk.download('maxent_ne_chunker')
nltk.download('treebank')
nltk.download('words')
from nltk import pos_tag
text="Jignesh was born in Mumbai in 1996."
text_tag=pos_tag(text.split())
sent = nltk.corpus.treebank.tagged_sents()[1]
print(nltk.ne_chunk(text_tag, binary=True))
print(nltk.ne_chunk(text_tag))

#5c_Named Entity recognition with diagram using NLTKcorpus – treebank
import nltk
nltk.download('treebank')
from nltk.corpus import treebank_chunk
sentence = treebank_chunk.chunked_sents()[0]
# Pretty printing the parse tree
print(sentence.pretty_print())

